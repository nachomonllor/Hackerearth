https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/sum-as-per-frequency-88b00c1f/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp269
{
    class Program
    {
        static void Main(string[] args)
        {

            int N = int.Parse(Console.ReadLine());

            long[] arr = Array.ConvertAll(Console.ReadLine().Trim().Split(' '), e => long.Parse(e));


            long MAX = arr.Max() + 1;

            long[] frec = new long[MAX];

            foreach (int item in arr)
            {
                frec[item]++;
            }


            long[] acumFrec = new long[MAX];

            for (int i = 0; i < frec.Length; i++)
            {
                acumFrec[frec[i]] += i * frec[i];
            }


            long[] acumRecorrer = new long[MAX];

            long sum = 0;
            for (int i = 0; i < MAX; i++)
            {
                sum += acumFrec[i];
                acumRecorrer[i] = sum;
            }


            int Q = int.Parse(Console.ReadLine().Trim());

            StringBuilder sb = new StringBuilder();

            while (Q-- > 0)
            {
                string[] input = Console.ReadLine().Trim().Split(' ');

                int l = int.Parse(input.First());
                int r = int.Parse(input.Last());

                if (l - 1 >= 0)
                {
                    sb.AppendLine((acumRecorrer[r] - acumRecorrer[l - 1]).ToString());
                }
                else
                {
                    sb.AppendLine(acumRecorrer[r].ToString());

                }
            }

            Console.WriteLine(sb.ToString());

            Console.ReadLine();
        }
    }
}
